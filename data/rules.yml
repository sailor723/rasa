version: "2.0"
rules:
- rule: say iam bot when greet
  steps:
  - or:
    - intent: greet
    - intent: login
  - action: utter_protocol
  - action: action_Login

- rule: Say goodbye anytime the user says goodbye
  steps:
  - intent: goodbye
  - action: utter_goodbye
- rule: Say 'I am a bot' anytime the user challenges
  steps:
  - intent: bot_challenge
  - action: utter_iamabot
- rule: write text
  steps:
  - intent: write
  - action: action_write_text
- rule: check protocol after age protocol
  steps:
  - intent: age
  # - action: utter_protocol_submit
  - action: action_check_protocol
- rule: Ask the user to rephrase whenever they send a message with low NLU confidence
  steps:
  - intent: nlu_fallback
  - action: action_write_text
  - action: utter_please_rephrase
- rule: out-of-scope
  steps:
  - intent: out_of_scope
  - action: utter_out_of_scope
- rule: new_scope
  steps:
  - intent: new_scope
  - action: action_new_scope

- rule: Activate Protocol Form
  steps:
  - intent: inquiry_protocol
  - action: utter_protocol
  - action: simple_protocol_form
  - active_loop: simple_protocol_form

- rule: Activate Protocol Form
  steps:
  - intent: inform_protocol
  - action: simple_protocol_form
  - active_loop: simple_protocol_form
- rule: Submit Portocol Form
  condition:
  - active_loop: simple_protocol_form
  steps:
  - action: simple_protocol_form
  - active_loop: null
  - slot_was_set:
    - requested_slot: null
  # - action: utter_protocol_submit
  - action: action_check_protocol

- rule: Interruption in Protocol Form
  condition:
  # Condition that form is active.
  - active_loop: simple_protocol_form
  steps:
  # This unhappy path handles the case of an intent `bot_challenge`.
  - intent: bot_challenge
  - action: utter_iamabot
  # Return to form after handling the `bot_challenge` intent
  - action: simple_protocol_form
  - active_loop: simple_protocol_form

  # This is to confirm push success